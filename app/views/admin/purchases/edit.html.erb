<div class="container-fluid">
  <div class="row">
    <div class="col-12">
      <div class="d-flex justify-content-between align-items-center mb-4" style="margin-top: 80px;">
        <h2 class="text-primary">購入履歴編集</h2>
        <div>
          <%= link_to "購入履歴一覧に戻る", admin_purchases_path, class: "btn btn-outline-secondary me-2" %>
          <%= link_to "ダッシュボード", admin_root_path, class: "btn btn-outline-primary" %>
        </div>
      </div>
    </div>
  </div>

  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card">
        <div class="card-header">
          <h5 class="card-title mb-0">購入情報の編集</h5>
        </div>
        <div class="card-body">
          <!-- 購入情報の表示 -->
          <div class="row mb-4">
            <div class="col-md-6">
              <div class="card bg-light">
                <div class="card-body">
                  <h6 class="card-title text-muted">購入情報</h6>
                  <p class="mb-1"><strong>購入日時:</strong> <%= @purchase.purchased_at.strftime('%Y年%m月%d日 %H:%M') %></p>
                  <p class="mb-1"><strong>顧客名:</strong> <%= @purchase.customer.name %></p>
                  <p class="mb-1"><strong>商品名:</strong> <%= @purchase.product.name %></p>
                  <p class="mb-0"><strong>販売店:</strong> <%= @purchase.user.name.present? ? @purchase.user.name : @purchase.user.email %></p>
                </div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="card bg-light">
                <div class="card-body">
                  <h6 class="card-title text-muted">現在の金額情報</h6>
                  <p class="mb-1"><strong>現在の数量:</strong> <span class="text-primary"><%= number_with_delimiter(@purchase.quantity) %></span></p>
                  <p class="mb-1"><strong>現在の単価:</strong> <span class="text-success">¥<%= number_with_delimiter(@purchase.unit_price) %></span></p>
                  <p class="mb-0"><strong>現在の合計:</strong> <span class="text-danger">¥<%= number_with_delimiter(@purchase.total_price) %></span></p>
                </div>
              </div>
            </div>
          </div>

          <!-- 編集フォーム -->
          <%= form_with model: [:admin, @purchase], local: true, class: "needs-validation", novalidate: true do |form| %>
            <% if @purchase.errors.any? %>
              <div class="alert alert-danger">
                <h6>エラーが発生しました:</h6>
                <ul class="mb-0">
                  <% @purchase.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                  <% end %>
                </ul>
              </div>
            <% end %>

            <div class="row">
              <div class="col-md-6">
                <div class="mb-3">
                  <%= form.label :quantity, "数量", class: "form-label" %>
                  <%= form.number_field :quantity, 
                      class: "form-control form-control-lg", 
                      min: 1, 
                      required: true,
                      id: "quantity_input" %>
                  <div class="invalid-feedback">
                    数量は1以上で入力してください。
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="mb-3">
                  <%= form.label :unit_price, "単価", class: "form-label" %>
                  <div class="input-group">
                    <span class="input-group-text">¥</span>
                    <%= form.number_field :unit_price, 
                        class: "form-control form-control-lg", 
                        min: 0, 
                        required: true,
                        id: "unit_price_input" %>
                  </div>
                  <div class="invalid-feedback">
                    単価は0以上で入力してください。
                  </div>
                </div>
              </div>
            </div>

            <!-- 計算結果表示 -->
            <div class="row mb-4">
              <div class="col-12">
                <div class="card border-primary">
                  <div class="card-body text-center">
                    <h6 class="card-title text-muted">新しい合計金額</h6>
                    <h3 class="text-primary mb-0" id="total_amount">¥<%= number_with_delimiter(@purchase.total_price) %></h3>
                  </div>
                </div>
              </div>
            </div>

            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
              <%= link_to "キャンセル", admin_purchases_path, class: "btn btn-secondary me-md-2" %>
              <%= form.submit "更新する", class: "btn btn-primary btn-lg" %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // リアルタイム計算
  function updateTotal() {
    const quantity = document.getElementById('quantity_input').value || 0;
    const unitPrice = document.getElementById('unit_price_input').value || 0;
    const total = quantity * unitPrice;
    
    document.getElementById('total_amount').textContent = 
      '¥' + total.toLocaleString();
  }

  // 入力フィールドにイベントリスナーを追加
  document.addEventListener('DOMContentLoaded', function() {
    const quantityInput = document.getElementById('quantity_input');
    const unitPriceInput = document.getElementById('unit_price_input');
    
    quantityInput.addEventListener('input', updateTotal);
    unitPriceInput.addEventListener('input', updateTotal);
    
    // Bootstrap validation
    const forms = document.querySelectorAll('.needs-validation');
    Array.from(forms).forEach(form => {
      form.addEventListener('submit', event => {
        if (!form.checkValidity()) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      });
    });
  });
</script>

<style>
  .card {
    border: none;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
  }
  
  .card-header {
    background-color: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
  }
  
  .form-control-lg {
    font-size: 1.1rem;
    padding: 0.75rem 1rem;
  }
  
  .input-group-text {
    font-weight: bold;
    background-color: #e9ecef;
  }
  
  .border-primary {
    border-color: #0d6efd !important;
  }
  
  /* レスポンシブ対応 */
  @media (max-width: 768px) {
    .d-flex.justify-content-between {
      flex-direction: column;
      align-items: flex-start !important;
    }
    
    .me-2 {
      margin-bottom: 0.5rem;
      margin-right: 0 !important;
    }
  }
</style>